# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    tags:
    - '*'

jobs:
  build-osx:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 15
      uses: joschi/setup-jdk@v2
      with:
        java-version: 15

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean compile package -Ppackage -f JeditFX/pom.xml
    - name: Get Name of Artifact
      run: |
        ARTIFACT_PATHNAME=$(ls JeditFX/target/package/*.pkg | head -n 1)
        ARTIFACT_NAME=$(basename $ARTIFACT_PATHNAME)
        echo ::set-env name=ARTIFACT_NAME::${ARTIFACT_NAME}
        echo ::set-env name=ARTIFACT_PATHNAME::${ARTIFACT_PATHNAME}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}    
    - name: Upload Release Asset OSX
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}  
        asset_path: ${{ env.ARTIFACT_PATHNAME }}
        asset_name: ${{ env.ARTIFACT_NAME }}
        asset_content_type: application/pkg


  build-win:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 15
      uses: joschi/setup-jdk@v2
      with:
        java-version: 15

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B clean compile package -Ppackage -f JeditFX/pom.xml
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: Upload Release Asset Win
      id: upload-release-asset 
      uses: csexton/release-asset-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        pattern: JeditFX\target\package\*.msi
        release-url: ${{ steps.get_release.outputs.upload_url }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

