# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    tags:
    - '*'

jobs:
  build-osx:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: 17

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -Ppackage -f JeditFX/pom.xml
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release Asset OSX
      id: upload-release-asset 
      uses: csexton/release-asset-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        pattern: JeditFX/target/*.pkg
        release-url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        github-token: ${{ secrets.GITHUB_TOKEN }}


  build-win:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: 17

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -Ppackage -f JeditFX/pom.xml
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: Upload Release Asset Win
      id: upload-release-asset 
      uses: csexton/release-asset-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        pattern: JeditFX\target\*.msi
        release-url: ${{ steps.get_release.outputs.upload_url }}
        github-token: ${{ secrets.GITHUB_TOKEN }}


  build-linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: joschi/setup-jdk@v2
      with:
        java-version: 17

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean install -Ppackage -f JeditFX/pom.xml
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Release Asset Linux
      id: upload-release-asset 
      uses: csexton/release-asset-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        pattern: JeditFX/target/*.deb
        release-url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        github-token: ${{ secrets.GITHUB_TOKEN }}
